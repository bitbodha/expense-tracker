name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run tests
        run: npm run test
        
      - name: Build shared packages
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/database

  mobile-android:
    name: Android Build
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared packages
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/database
          
      - name: Android Build
        working-directory: apps/mobile
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon
          
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: apps/mobile/android/app/build/outputs/apk/debug/app-debug.apk

  mobile-ios:
    name: iOS Build
    runs-on: macos-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared packages
        run: |
          npm run build --workspace=packages/shared
          npm run build --workspace=packages/database
          
      - name: Install iOS dependencies
        working-directory: apps/mobile/ios
        run: pod install
        
      - name: iOS Build
        working-directory: apps/mobile
        run: |
          npx react-native build-ios --mode Debug --scheme ExpenseTracker
          
  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript compilation check
        run: |
          npx tsc --noEmit --workspace=packages/shared
          npx tsc --noEmit --workspace=packages/database
          npx tsc --noEmit --workspace=apps/mobile
